{
  "address": "0x591239742B2f363e10880f74B84fDa0bd19e5F2F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_protocol_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "committee_divider",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contract_protected",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "max_appeals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "max_duration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "min_deal_value",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "min_duration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissioned_providers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposal_timeout",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocol_address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "round_duration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rounds_limit",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "kind",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "setRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slashes_threshold",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slashing_multiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token_render",
      "outputs": [
        {
          "internalType": "contract IRENDER",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "kind",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "addy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "tuneProtocolVariables",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "kind",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "value256",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "value32",
          "type": "uint32"
        }
      ],
      "name": "tuneProvidersVariables",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "kind",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "value8",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "value32",
          "type": "uint32"
        }
      ],
      "name": "tuneRefereesVariables",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0ae0d6ad9d38b29cc418f02328c723291d246fb44470ffc9b2a8c45d9d8e7115",
  "receipt": {
    "to": null,
    "from": "0x81A91158497A1cD700De7f6D83ee565788A9C273",
    "contractAddress": "0x591239742B2f363e10880f74B84fDa0bd19e5F2F",
    "transactionIndex": 0,
    "gasUsed": "60994202",
    "logsBloom": "0x0c40808c8000208029b640c0341010d28e4021004503244006809002012418c381061472094002000200384405950e0102e30305080080214a052802102400840322890040039000000000980060128c084b4200200c940091321200c3411010480500000a3404480053018404287805202001a06200460a007210380004ba40100824224517980044509014011451c20c00c080a010088802111908400600c35e00c040212242104200110200404c00a050012002000036021090806708c20209a0842268008014f010089004841120aa0281101c4a42010199c121e100e000021804004980311200501008020900006740000a0380094081840800428c6040",
    "blockHash": "0xfe58217ba0473c4c3b15bf4c12e1f14e00abdb097cd20ee1d9550ca423a177b7",
    "transactionHash": "0x0ae0d6ad9d38b29cc418f02328c723291d246fb44470ffc9b2a8c45d9d8e7115",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 961177,
        "transactionHash": "0x0ae0d6ad9d38b29cc418f02328c723291d246fb44470ffc9b2a8c45d9d8e7115",
        "address": "0x591239742B2f363e10880f74B84fDa0bd19e5F2F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000081a91158497a1cd700de7f6d83ee565788a9c273"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xfe58217ba0473c4c3b15bf4c12e1f14e00abdb097cd20ee1d9550ca423a177b7"
      }
    ],
    "blockNumber": 961177,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x81A91158497A1cD700De7f6D83ee565788A9C273"
  ],
  "numDeployments": 2,
  "solcInputHash": "2e453cfa57785308548e0ed919788d06",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocol_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"committee_divider\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contract_protected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max_appeals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max_duration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"min_deal_value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"min_duration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissioned_providers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposal_timeout\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocol_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"round_duration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rounds_limit\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slashes_threshold\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slashing_multiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token_render\",\"outputs\":[{\"internalType\":\"contract IRENDER\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"tuneProtocolVariables\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value256\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"value32\",\"type\":\"uint32\"}],\"name\":\"tuneProvidersVariables\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"value8\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"value32\",\"type\":\"uint32\"}],\"name\":\"tuneRefereesVariables\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Settings for retrieval protocol adapted from retriev\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/retrieve/settings/Settings.sol\":\"Settings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/retrieve/functions/render/IRENDER.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\r\\n\\r\\ninterface IRENDER is IERC165 {\\r\\n    function render(\\r\\n        uint256 deal_index,\\r\\n        string memory data_uri,\\r\\n        uint256 value,\\r\\n        uint256 timestamp_start,\\r\\n        uint256 duration,\\r\\n        bool appeal,\\r\\n        address owner\\r\\n    ) external pure returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x57d802331754166e68b47c3becb9e2a2f21e1d6b1a7cc7f7a7608758345e6b93\",\"license\":\"MIT\"},\"contracts/retrieve/settings/Settings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.17;\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./../functions/render/IRENDER.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title Settings for retrieval protocol adapted from retriev\\r\\n */\\r\\ncontract Settings is Ownable {\\r\\n    // admins\\r\\n    mapping(uint8 => mapping(address => bool)) public admins;\\r\\n    // Multipliers\\r\\n    uint256 public slashing_multiplier = 1000;\\r\\n    uint8 public committee_divider = 4;\\r\\n    // Deal parameters\\r\\n    uint32 public proposal_timeout = 86_400;\\r\\n    uint8 public max_appeals = 5;\\r\\n    uint256 public min_deal_value = 0;\\r\\n    // Round parameters\\r\\n    uint32 public round_duration = 300;\\r\\n    uint32 public min_duration = 86_400;\\r\\n    uint32 public max_duration = 31_536_000;\\r\\n    uint8 public slashes_threshold = 12;\\r\\n    uint8 public rounds_limit = 12;\\r\\n    // Render contract\\r\\n    IRENDER public token_render;\\r\\n    // Contract state variables\\r\\n    bool public contract_protected = false;\\r\\n    bool public permissioned_providers = false;\\r\\n    // Protocol address\\r\\n    address public protocol_address;\\r\\n\\r\\n    constructor(address _protocol_address) {\\r\\n        require(_protocol_address != address(0), \\\"Can't init protocol with black-hole\\\");\\r\\n        protocol_address = _protocol_address;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n        Admin function to setup roles\\r\\n    */\\r\\n\\r\\n    function setRole(uint8 kind, bool status, address admin) external {\\r\\n        // Set specified role, using:\\r\\n        // 1 - Protocol managers\\r\\n        // 2 - Referees managers\\r\\n        // 3 - Providers managers\\r\\n        admins[kind][admin] = status;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n        Admin functions to fine tune protocol\\r\\n    */\\r\\n    function tuneRefereesVariables(uint8 kind, uint8 value8, uint32 value32) external {\\r\\n        require(msg.sender == owner() || admins[2][msg.sender], \\\"Can't manage referees variables\\\");\\r\\n        if (kind == 0) {\\r\\n            committee_divider = value8;\\r\\n        } else if (kind == 1) {\\r\\n            max_appeals = value8;\\r\\n        } else if (kind == 2) {\\r\\n            round_duration = value32;\\r\\n        } else if (kind == 3) {\\r\\n            rounds_limit = value8;\\r\\n        } else if (kind == 4) {\\r\\n            slashes_threshold = value8;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function tuneProvidersVariables(uint8 kind, uint256 value256, uint32 value32) external {\\r\\n        require(msg.sender == owner() || admins[3][msg.sender], \\\"Can't manage providers variables\\\");\\r\\n        if (kind == 0) {\\r\\n            proposal_timeout = value32;\\r\\n        } else if (kind == 1) {\\r\\n            min_deal_value = value256;\\r\\n        } else if (kind == 2) {\\r\\n            slashing_multiplier = value256;\\r\\n        } else if (kind == 3) {\\r\\n            min_duration = value32;\\r\\n        } else if (kind == 4) {\\r\\n            max_duration = value32;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function tuneProtocolVariables(uint8 kind, address addy, bool state) external {\\r\\n        require(msg.sender == owner() || admins[1][msg.sender], \\\"Can't manage protocol variables\\\");\\r\\n        if (kind == 0) {\\r\\n            token_render = IRENDER(addy);\\r\\n        } else if (kind == 1) {\\r\\n            protocol_address = addy;\\r\\n        } else if (kind == 2) {\\r\\n            contract_protected = state;\\r\\n        } else if (kind == 3) {\\r\\n            permissioned_providers = state;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb86002576dcd222a7fc62fe7e252f3583c382ce36e8cbe0e4bda109a786a4cc7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526103e86002556003805465ffffffffffff1916650500015180041790556000600455600580546001600160701b0319166d0c0c01e13380000151800000012c1790556006805461ffff60a01b1916905534801561006057600080fd5b5060405162000e9238038062000e9283398101604081905261008191610163565b61008a336100de565b6001600160a01b0381166100b95760405162461bcd60e51b81526004016100b09061018c565b60405180910390fd5b600780546001600160a01b0319166001600160a01b03929092169190911790556101d3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b61014a8161012e565b811461015557600080fd5b50565b805161013b81610141565b60006020828403121561017857610178600080fd5b60006101848484610158565b949350505050565b6020808252810161013b81602381527f43616e277420696e69742070726f746f636f6c207769746820626c61636b2d686020820152626f6c6560e81b604082015260600190565b610caf80620001e36000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80636ea3d06f116100d8578063d1b04e9e1161008c578063f2fde38b11610066578063f2fde38b14610399578063fb2f14a4146103ac578063fce9bfea146103c157600080fd5b8063d1b04e9e14610329578063e13f8e6c14610339578063e24f68031461034f57600080fd5b80638da5cb5b116100bd5780638da5cb5b146102e1578063a6172e74146102f2578063a68986c8146102fb57600080fd5b80636ea3d06f146102c6578063715018a6146102d957600080fd5b80632f8148451161013a5780635eb8cf25116101145780635eb8cf251461026d5780636522514f146102895780636694c06c146102a657600080fd5b80632f814845146102155780632fe5861114610235578063335d4d5b1461024f57600080fd5b80630a0d8b7f1161016b5780630a0d8b7f146101ca578063258b12e7146101e057806328462c1e1461020157600080fd5b806306b2df4514610187578063092811f21461019c575b600080fd5b61019a6101953660046108c9565b6103d4565b005b6005546101b490640100000000900463ffffffff1681565b6040516101c19190610927565b60405180910390f35b6101d360045481565b6040516101c1919061093b565b6006546101f490600160a81b900460ff1681565b6040516101c19190610951565b6006546101f490600160a01b900460ff1681565b600654610228906001600160a01b031681565b6040516101c1919061097e565b6003546102429060ff1681565b6040516101c19190610995565b600554610242906d0100000000000000000000000000900460ff1681565b6005546101b49068010000000000000000900463ffffffff1681565b600554610242906c01000000000000000000000000900460ff1681565b6007546102b9906001600160a01b031681565b6040516101c191906109ac565b61019a6102d43660046109e2565b610535565b61019a610650565b6000546001600160a01b03166102b9565b6101d360025481565b6101f4610309366004610a28565b600160209081526000928352604080842090915290825290205460ff1681565b6005546101b49063ffffffff1681565b6003546102429065010000000000900460ff1681565b61019a61035d366004610a65565b60ff9290921660009081526001602090815260408083206001600160a01b03909516835293905291909120805460ff1916911515919091179055565b61019a6103a7366004610aab565b610664565b6003546101b490610100900463ffffffff1681565b61019a6103cf366004610ad4565b61069e565b6000546001600160a01b031633148061041b57503360009081527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f602052604090205460ff165b6104405760405162461bcd60e51b815260040161043790610b40565b60405180910390fd5b8260ff16600003610478576006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416179055505050565b8260ff166001036104b0576007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416179055505050565b8260ff166002036104f257600680547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b83151502179055505050565b8260ff1660030361053057600680547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b831515021790555b505050565b6000546001600160a01b031633148061057c57503360009081527f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b602052604090205460ff165b6105985760405162461bcd60e51b815260040161043790610b82565b8260ff166000036105c2576003805464ffffffff00191661010063ffffffff841602179055505050565b8260ff166001036105d4575060045550565b8260ff166002036105e6575060025550565b8260ff16600303610616576005805467ffffffff00000000191664010000000063ffffffff841602179055505050565b8260ff16600403610530576005805463ffffffff831668010000000000000000026bffffffff000000000000000019909116179055505050565b6106586107e9565b6106626000610813565b565b61066c6107e9565b6001600160a01b0381166106925760405162461bcd60e51b815260040161043790610b92565b61069b81610813565b50565b6000546001600160a01b03163314806106e557503360009081527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f602052604090205460ff165b6107015760405162461bcd60e51b815260040161043790610c27565b8260ff16600003610720576003805460ff191660ff8416179055505050565b8260ff1660010361074c576003805465ff000000000019166501000000000060ff851602179055505050565b8260ff16600203610771576005805463ffffffff191663ffffffff8316179055505050565b8260ff166003036107ad57600580546dff0000000000000000000000000019166d010000000000000000000000000060ff851602179055505050565b8260ff16600403610530576005805460ff84166c01000000000000000000000000026cff00000000000000000000000019909116179055505050565b6000546001600160a01b031633146106625760405162461bcd60e51b815260040161043790610c69565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60ff81165b811461069b57600080fd5b803561088b81610870565b92915050565b60006001600160a01b03821661088b565b61087581610891565b803561088b816108a2565b801515610875565b803561088b816108b6565b6000806000606084860312156108e1576108e1600080fd5b60006108ed8686610880565b93505060206108fe868287016108ab565b925050604061090f868287016108be565b9150509250925092565b63ffffffff81165b82525050565b6020810161088b8284610919565b80610921565b6020810161088b8284610935565b801515610921565b6020810161088b8284610949565b600061088b82610891565b600061088b8261095f565b6109218161096a565b6020810161088b8284610975565b60ff8116610921565b6020810161088b828461098c565b61092181610891565b6020810161088b82846109a3565b80610875565b803561088b816109ba565b63ffffffff8116610875565b803561088b816109cb565b6000806000606084860312156109fa576109fa600080fd5b6000610a068686610880565b9350506020610a17868287016109c0565b925050604061090f868287016109d7565b60008060408385031215610a3e57610a3e600080fd5b6000610a4a8585610880565b9250506020610a5b858286016108ab565b9150509250929050565b600080600060608486031215610a7d57610a7d600080fd5b6000610a898686610880565b9350506020610a9a868287016108be565b925050604061090f868287016108ab565b600060208284031215610ac057610ac0600080fd5b6000610acc84846108ab565b949350505050565b600080600060608486031215610aec57610aec600080fd5b6000610af88686610880565b9350506020610a1786828701610880565b601f81526000602082017f43616e2774206d616e6167652070726f746f636f6c207661726961626c657300815291505b5060200190565b6020808252810161088b81610b09565b60208082527f43616e2774206d616e6167652070726f766964657273207661726961626c657391019081526000610b39565b6020808252810161088b81610b50565b6020808252810161088b81602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b601f81526000602082017f43616e2774206d616e616765207265666572656573207661726961626c65730081529150610b39565b6020808252810161088b81610bf3565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000610b39565b6020808252810161088b81610c3756fea2646970667358221220bbbabeff6aca2fbe5f8c18cdef84126c95fe4592c30e8b4bdde3152a26ac64a864736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101825760003560e01c80636ea3d06f116100d8578063d1b04e9e1161008c578063f2fde38b11610066578063f2fde38b14610399578063fb2f14a4146103ac578063fce9bfea146103c157600080fd5b8063d1b04e9e14610329578063e13f8e6c14610339578063e24f68031461034f57600080fd5b80638da5cb5b116100bd5780638da5cb5b146102e1578063a6172e74146102f2578063a68986c8146102fb57600080fd5b80636ea3d06f146102c6578063715018a6146102d957600080fd5b80632f8148451161013a5780635eb8cf25116101145780635eb8cf251461026d5780636522514f146102895780636694c06c146102a657600080fd5b80632f814845146102155780632fe5861114610235578063335d4d5b1461024f57600080fd5b80630a0d8b7f1161016b5780630a0d8b7f146101ca578063258b12e7146101e057806328462c1e1461020157600080fd5b806306b2df4514610187578063092811f21461019c575b600080fd5b61019a6101953660046108c9565b6103d4565b005b6005546101b490640100000000900463ffffffff1681565b6040516101c19190610927565b60405180910390f35b6101d360045481565b6040516101c1919061093b565b6006546101f490600160a81b900460ff1681565b6040516101c19190610951565b6006546101f490600160a01b900460ff1681565b600654610228906001600160a01b031681565b6040516101c1919061097e565b6003546102429060ff1681565b6040516101c19190610995565b600554610242906d0100000000000000000000000000900460ff1681565b6005546101b49068010000000000000000900463ffffffff1681565b600554610242906c01000000000000000000000000900460ff1681565b6007546102b9906001600160a01b031681565b6040516101c191906109ac565b61019a6102d43660046109e2565b610535565b61019a610650565b6000546001600160a01b03166102b9565b6101d360025481565b6101f4610309366004610a28565b600160209081526000928352604080842090915290825290205460ff1681565b6005546101b49063ffffffff1681565b6003546102429065010000000000900460ff1681565b61019a61035d366004610a65565b60ff9290921660009081526001602090815260408083206001600160a01b03909516835293905291909120805460ff1916911515919091179055565b61019a6103a7366004610aab565b610664565b6003546101b490610100900463ffffffff1681565b61019a6103cf366004610ad4565b61069e565b6000546001600160a01b031633148061041b57503360009081527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f602052604090205460ff165b6104405760405162461bcd60e51b815260040161043790610b40565b60405180910390fd5b8260ff16600003610478576006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416179055505050565b8260ff166001036104b0576007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416179055505050565b8260ff166002036104f257600680547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b83151502179055505050565b8260ff1660030361053057600680547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b831515021790555b505050565b6000546001600160a01b031633148061057c57503360009081527f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b602052604090205460ff165b6105985760405162461bcd60e51b815260040161043790610b82565b8260ff166000036105c2576003805464ffffffff00191661010063ffffffff841602179055505050565b8260ff166001036105d4575060045550565b8260ff166002036105e6575060025550565b8260ff16600303610616576005805467ffffffff00000000191664010000000063ffffffff841602179055505050565b8260ff16600403610530576005805463ffffffff831668010000000000000000026bffffffff000000000000000019909116179055505050565b6106586107e9565b6106626000610813565b565b61066c6107e9565b6001600160a01b0381166106925760405162461bcd60e51b815260040161043790610b92565b61069b81610813565b50565b6000546001600160a01b03163314806106e557503360009081527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f602052604090205460ff165b6107015760405162461bcd60e51b815260040161043790610c27565b8260ff16600003610720576003805460ff191660ff8416179055505050565b8260ff1660010361074c576003805465ff000000000019166501000000000060ff851602179055505050565b8260ff16600203610771576005805463ffffffff191663ffffffff8316179055505050565b8260ff166003036107ad57600580546dff0000000000000000000000000019166d010000000000000000000000000060ff851602179055505050565b8260ff16600403610530576005805460ff84166c01000000000000000000000000026cff00000000000000000000000019909116179055505050565b6000546001600160a01b031633146106625760405162461bcd60e51b815260040161043790610c69565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60ff81165b811461069b57600080fd5b803561088b81610870565b92915050565b60006001600160a01b03821661088b565b61087581610891565b803561088b816108a2565b801515610875565b803561088b816108b6565b6000806000606084860312156108e1576108e1600080fd5b60006108ed8686610880565b93505060206108fe868287016108ab565b925050604061090f868287016108be565b9150509250925092565b63ffffffff81165b82525050565b6020810161088b8284610919565b80610921565b6020810161088b8284610935565b801515610921565b6020810161088b8284610949565b600061088b82610891565b600061088b8261095f565b6109218161096a565b6020810161088b8284610975565b60ff8116610921565b6020810161088b828461098c565b61092181610891565b6020810161088b82846109a3565b80610875565b803561088b816109ba565b63ffffffff8116610875565b803561088b816109cb565b6000806000606084860312156109fa576109fa600080fd5b6000610a068686610880565b9350506020610a17868287016109c0565b925050604061090f868287016109d7565b60008060408385031215610a3e57610a3e600080fd5b6000610a4a8585610880565b9250506020610a5b858286016108ab565b9150509250929050565b600080600060608486031215610a7d57610a7d600080fd5b6000610a898686610880565b9350506020610a9a868287016108be565b925050604061090f868287016108ab565b600060208284031215610ac057610ac0600080fd5b6000610acc84846108ab565b949350505050565b600080600060608486031215610aec57610aec600080fd5b6000610af88686610880565b9350506020610a1786828701610880565b601f81526000602082017f43616e2774206d616e6167652070726f746f636f6c207661726961626c657300815291505b5060200190565b6020808252810161088b81610b09565b60208082527f43616e2774206d616e6167652070726f766964657273207661726961626c657391019081526000610b39565b6020808252810161088b81610b50565b6020808252810161088b81602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b601f81526000602082017f43616e2774206d616e616765207265666572656573207661726961626c65730081529150610b39565b6020808252810161088b81610bf3565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000610b39565b6020808252810161088b81610c3756fea2646970667358221220bbbabeff6aca2fbe5f8c18cdef84126c95fe4592c30e8b4bdde3152a26ac64a864736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Settings for retrieval protocol adapted from retriev",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 817,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 12084,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "admins",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint8,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 12087,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "slashing_multiplier",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 12090,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "committee_divider",
        "offset": 0,
        "slot": "3",
        "type": "t_uint8"
      },
      {
        "astId": 12093,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "proposal_timeout",
        "offset": 1,
        "slot": "3",
        "type": "t_uint32"
      },
      {
        "astId": 12096,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "max_appeals",
        "offset": 5,
        "slot": "3",
        "type": "t_uint8"
      },
      {
        "astId": 12099,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "min_deal_value",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 12102,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "round_duration",
        "offset": 0,
        "slot": "5",
        "type": "t_uint32"
      },
      {
        "astId": 12105,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "min_duration",
        "offset": 4,
        "slot": "5",
        "type": "t_uint32"
      },
      {
        "astId": 12108,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "max_duration",
        "offset": 8,
        "slot": "5",
        "type": "t_uint32"
      },
      {
        "astId": 12111,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "slashes_threshold",
        "offset": 12,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 12114,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "rounds_limit",
        "offset": 13,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 12117,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "token_render",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IRENDER)10816"
      },
      {
        "astId": 12120,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "contract_protected",
        "offset": 20,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 12123,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "permissioned_providers",
        "offset": 21,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 12125,
        "contract": "contracts/retrieve/settings/Settings.sol:Settings",
        "label": "protocol_address",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IRENDER)10816": {
        "encoding": "inplace",
        "label": "contract IRENDER",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint8,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}